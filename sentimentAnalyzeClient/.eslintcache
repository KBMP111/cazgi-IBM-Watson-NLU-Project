[{"/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/App.js":"1","/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/reportWebVitals.js":"2","/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/EmotionTable.js":"3","/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/index.js":"4"},{"size":3011,"mtime":1626171295131,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1625993203257,"results":"7","hashOfConfig":"6"},{"size":548,"mtime":1626171623829,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1625993203257,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"acuz6d",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/App.js",["21"],"import './bootstrap.min.css';\nimport './App.css';\nimport EmotionTable from './EmotionTable.js';\nimport React from 'react';\nimport ReactDom from 'react-dom'\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n            mode: \"text\",\n          sentimentOutput:[],\n          sentiment:true\n        }\n  \n  renderTextArea = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"url\") {\n      this.setState({innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"text\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    } \n  }\n\n  renderTextBox = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"text\") {\n      this.setState({innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"url\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    }\n  }\n\n  sendForSentimentAnalysis = () => {\n    this.setState({sentiment:true});\n    let ret = \"\";\n    let url = \".\";\n\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n    ret.then((response)=>{\n\n      //Include code here to check the sentiment and fomrat the data accordingly\n\n      this.setState({sentimentOutput:response.data});\n      let output = response.data;\n      if(response.data === \"positive\") {\n        output = <div style={{color:\"green\",fontSize:20}}>{response.data}</div>\n      } else if (response.data === \"negative\"){\n        output = <div style={{color:\"red\",fontSize:20}}>{response.data}</div>\n      } else {\n        output = <div style={{color:\"orange\",fontSize:20}}>{response.data}</div>\n      }\n      this.setState({sentimentOutput:output});\n    });\n  }\n\n  sendForEmotionAnalysis = () => {\n    this.setState({sentiment:false});\n    let ret = \"\";\n    let url = \".\";\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n\n    ret.then((response)=>{\n      this.setState({sentimentOutput:<EmotionTable emotions={response.data}/>});\n  });\n  }\n  \n\n  render() {\n    return (  \n      <div className=\"App\">\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\n        <br/><br/>\n        {this.state.innercomp}\n        <br/>\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\n        <br/>\n        <div>\n            {this.state.sentimentOutput}\n        </div>\n      </div>\n    );\n    }\n}\n\nexport default App;\n","/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/reportWebVitals.js",[],["22","23"],"/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/EmotionTable.js",[],"/home/kabwe/IdeaProjects/cazgi-IBM-Watson-NLU-Project/sentimentAnalyzeClient/src/index.js",[],["24","25"],{"ruleId":"26","severity":1,"message":"27","line":5,"column":8,"nodeType":"28","messageId":"29","endLine":5,"endColumn":16},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},"no-unused-vars","'ReactDom' is defined but never used.","Identifier","unusedVar","no-native-reassign",["36"],"no-negated-in-lhs",["37"],["36"],["37"],"no-global-assign","no-unsafe-negation"]